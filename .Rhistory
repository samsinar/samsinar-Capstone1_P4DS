## Your code here
workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2)
)
## Your code here
workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col(aes(fill = name))
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col(aes(fill = name))
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text))
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text))
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text))
plot_paygap
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col(aes(fill = name)) +
geom_vline(xintercept = 50, linetype = "dotted")+
labs(y = "", x = "", title = "US Labor Force Participation in 2016",
subtitle = "Mean Female vs. Male Workers Percentage") +
theme(legend.position = "none") +
scale_x_continuous(labels = unit_format(unit = "%")) +
theme_algoritma
ggplotly(plot_labor2016, tooltip = "text")
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col(aes(fill = name)) +
labs(y = "", x = "", title = "US Gender Pay Gap in 2016") +
theme(legend.position = "none") +
theme_algoritma
ggplotly(plot_paygap, tooltip = "text")
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col(aes(fill = name)) +
geom_vline(xintercept = 50, linetype = "dotted")+
labs(y = "", x = "", title = "US Gender Pay Gap in 2016") +
theme(legend.position = "none") +
scale_x_continuous(labels = unit_format(unit = "$"))+
theme_algoritma
ggplotly(plot_paygap, tooltip = "text")
## Your code here
paygap <- workers %>%
filter(year == "2016") %>%
select(major_category, total_earnings_female, total_earnings_male) %>%
group_by(major_category) %>%
summarise(
Male = mean(total_earnings_male),
Female = mean(total_earnings_female)
) %>%
ungroup() %>%
mutate(
major_category = reorder(major_category, Male - Female)
) %>%
pivot_longer(cols = -major_category) %>%
mutate(
text = paste0(name,": ",round(value,2))
)
plot_paygap <- ggplot(paygap, aes(x = value, y = major_category, text = text)) +
geom_col (mapping = aes(fill = name),
position = "dodge") +
geom_vline(xintercept = 50, linetype = "dotted")+
labs(y = "", x = "", title = "US Gender Pay Gap in 2016") +
theme(legend.position = "none") +
scale_x_continuous(labels = unit_format(unit = "$"))+
theme_algoritma
ggplotly(plot_paygap, tooltip = "text")
knitr::opts_chunk$set(echo = TRUE)
bank <- read.csv("bank-full.csv", sep = ";")
head(bank)
tail(bank)
dim(bank)
colnames(bank)
anyNA(bank)
name <- c(1:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
str(bank)
summary(bank)
subscribed_yes <- bank[bank$y == 'yes',]
boxplot(subscribed_yes$balance)
median(subscribed_yes$balance)
subs_age <- aggregate(y ~ age, data = subscribed_yes, FUN = length)
subs_age <- subs_age[order(subs_age$y, decreasing = TRUE), ]
head(subs_age, 10)
subs_m <- aggregate(y ~ marital, data = subscribed_yes, FUN = length)
subs_m
graphics::barplot(table(subscribed_yes$marital))
subs_job <- aggregate(y ~ job, data = subscribed_yes, FUN = length)
subs_job <- subs_job[order(subs_job$y, decreasing = TRUE), ]
subs_job
f <- aggregate(y ~ month , data = subscribed_yes, FUN = length)
f <- f[order(f$y, decreasing = TRUE), ]
f
e <- aggregate(campaign ~ month , data = subscribed_yes, FUN = sum)
e <- e[order(e$campaign, decreasing = TRUE), ]
e
table(subscribed_yes$previous)
table(subscribed_yes$poutcome, subscribed_yes$previous)
xtabs(y ~ poutcome+previous, data = subscribed_yes)
aggregate(y ~ poutcome+previous, data = subscribed_yes)
aggregate(y ~ poutcome+previous, data = subscribed_yes, FUN = sum)
aggregate(y ~ poutcome+previous, data = subscribed_yes, FUN = length)
xtabs(previous~poutcome)
xtabs(previous~poutcome,data = subscribed_yes)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
xtabs(previous~poutcome,data = subscribed_yes)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
xtabs(previous~poutcome,data = subscribed_yes)
table(subscribed_yes$poutcome, subscribed_yes$previous )
sum(table(subscribed_yes$poutcome, subscribed_yes$previous ))
table(subscribed_yes$poutcome, subscribed_yes$previous )
v <- table(subscribed_yes$poutcome, subscribed_yes$previous )
sum(v$failure )
v <- table(subscribed_yes$poutcome, subscribed_yes$previous )
sum(v$failure)
sum(v)
sum(v$poutcome)
sum(subscribed_yes$poutcome)
sum(subscribed_yes$previous)
xtabs(campaign~poutcome,data = subscribed_yes)
aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = length)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
xtabs(previous~poutcome,data = subscribed_yes)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = length)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
xtabs(previous~poutcome,data = subscribed_yes)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = length)
c(i,j)
i <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
j <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
c(i,j)
table(i,j)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
i <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
j <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
k <- (i$previous, j$previous)
(i$previous, j$previous)
(i$previous, j$previous)
(i$previous j$previous)
c(i$previous ,j$previous)
c(i, j)
plot(c(i$previous,j$previous))
plot(j)
plot(subscribed_yes$poutcome)
plot(subscribed_yes$previous)
plot(subscribed_yes$previous, subscribed_yes$campaign)
plot(subscribed_yes$previous, subscribed_yes$campaign)
plot(subscribed_yes$previous, subscribed_yes$poutcome)
plot(subscribed_yes$poutcome,subscribed_yes$previous)
plot((subscribed_yes$poutcome,subscribed_yes$previous), (subscribed_yes$poutcome, subscribed_yes$campaign))
plot(subscribed_yes$previous, subscribed_yes$campaign)
barplot(subscribed_yes$previous, subscribed_yes$campaign)
barplot(i)
o <- aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = sum)
p <- aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = length)
p
o <- aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = sum)
p <- aggregate(campaign ~ poutcome, data = subscribed_yes, FUN = length)
o
p
i <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
j <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
i <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
j <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
j
k
i <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
j <- aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
i
j
barplot(i)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
subscribed_yes[subscribed_yes$previous==0, ]
subscribed_yes[subscribed_yes$previous==1, ]
table(subscribed_yes$poutcome, subscribed_yes$previous)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
aggregate(previous ~ poutcome+previous, data = subscribed_yes, FUN = length)
aggregate(previous ~ previous+poutcome, data = subscribed_yes, FUN = length)
aggregate(previous ~ previous+poutcome, data = subscribed_yes, FUN = sum)
subscribed_yes[subscribed_yes$poutcome == success, ]
subscribed_yes[subscribed_yes$poutcome == 'success', ]
sinar <- subscribed_yes[subscribed_yes$poutcome == 'success', ]
sinar$poutcome
sinar$previous
table(sinar$previous, sinar$poutcome)
table(sinar$previous)
aggregate(poutcome~ previous, data = sinar)
aggregate(poutcome~ previous, data = sinar, FUN = length)
aggregate(poutcome~ previous, data = sinar, FUN = median)
sinar <- subscribed_yes[subscribed_yes$poutcome == 'success', ]
aggregate(poutcome~ previous, data = sinar, FUN = length)
oke <- aggregate(poutcome~ previous, data = sinar, FUN = length)
plot(oke)
median(oke$poutcome)
oke
median(oke$previous)
oke
mean(oke$previous)
median(oke$previous)
oke
median(oke$previous, oke$poutcome)
median(oke$poutcome)
oke
mean(oke$poutcome)
oke
table(bank$y)
plot(table(bank$y))
barplot(table(bank$y))
table(bank$age)
aggregate(balance ~ age, data = bank, FUN = length)
q <- q[order(q$balance, decreasing = true), ]
q <- q[order(balance, decreasing = true), ]
q <- aggregate(balance ~ age, data = bank, FUN = length)
q
q <- q[order(q$balance, decreasing = true), ]
q <- q[order(q$balance, decreasing = TRUE), ]
q
head(top_age, 10)
top_age <- aggregate(balance ~ age, data = bank, FUN = length)
top_age <- top_age[order(top_age$balance, decreasing = TRUE), ]
head(top_age, 10)
head(top_age, 20)
head(top_age, 30)
newdata <- bank
head(newdata)
newdata$age <- as.character(newdata$age)
summary(newdata$age)
newdata$age <- as.int(newdata$age)
newdata$age <- as.integer(newdata$age)
summary(newdata$age)
newdata$age_category <- sapply(newdata$age, FUN = function(x){
if(x <= 25){
"Teens (18-25)"
}else if(x > 25 & x <= 45){
"Adults (26-45)"
}else if(x > 45 & x <= 65){
"Older Adults (45-65)"
} else if (x > 65 & x <= 80){
"Aged (65-80)"
}else{
"80 and over"
}
})
newdata$age_category <- as.factor(newdata$age_category)
head(newdata, 10)
"Aged"
newdata$age_category <- sapply(newdata$age, FUN = function(x){
if(x <= 25){
"Teens"
}else if(x > 25 & x <= 45){
"Adults"
}else if(x > 45 & x <= 65){
"Older Adults"
} else if (x > 65 & x <= 80){
"Aged"
}else{
"80 and over"
}
})
newdata$age_category <- as.factor(newdata$age_category)
head(newdata, 10)
top_age <- aggregate(balance ~ age, data = newdata, FUN = length)
top_age <- top_age[order(top_age$balance, decreasing = TRUE), ]
head(top_age, 30)
anyNA(bank)
dim(bank)
colnames(bank)
anyNA(bank)
summary(bank)
name <- c(2:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
str(bank)
name <- c(2:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
name <- c(2:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
str(bank)
name
name <- c(2:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
str(bank)
knitr::opts_chunk$set(echo = TRUE)
bank <- read.csv("bank-full.csv", sep = ";")
head(bank)
tail(bank)
dim(bank)
colnames(bank)
anyNA(bank)
name <- c(2:4, 9, 11, 16, 5, 7, 8, 17)
bank[ , name] <- lapply(bank[ , name] , factor)
str(bank)
summary(bank)
table(bank$y)
barplot(table(bank$y))
plot(table(newdata$age_category))
barplot(table(newdata$age_category))
plot(newdata$y, newdata$age)
barplot(newdata$y, newdata$age)
scatter.smooth(newdata$y, newdata$age)
graphics::boxplot(newdata$y, newdata$age)
boxplot(newdata$y, newdata$age)
plot(newdata$y, newdata$age)
boxplot(table(bank$y))
cor(newdata$y, newdata$age)
var(newdata$y, newdata$age)
plot(newdata$y, newdata$age)
subscribed_yes <- bank[bank$y == 'yes',]
top_age <- aggregate(balance ~ age, data = newdata, FUN = length)
top_age <- top_age[order(top_age$balance, decreasing = TRUE), ]
head(top_age, 30)
plot(top_age$balance, subs_age$y)
subs_age <- aggregate(y ~ age, data = subscribed_yes, FUN = length)
subs_age <- subs_age[order(subs_age$y, decreasing = TRUE), ]
#head(subs_age, 10)
plot(top_age$balance, subs_age$y)
plot(top_age$balance, subs_age$y)
plot(top_age$balance, subs_age$y)
cor(e$campaign, f$y)
e <- aggregate(campaign ~ month , data = subscribed_yes, FUN = sum)
e <- e[order(e$campaign, decreasing = TRUE), ]
e
f <- aggregate(y ~ month , data = subscribed_yes, FUN = length)
f <- f[order(f$y, decreasing = TRUE), ]
f
cor(e$campaign, f$y)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = sum)
aggregate(previous ~ poutcome, data = subscribed_yes, FUN = length)
